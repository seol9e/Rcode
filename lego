# Use the suffix argument to replace .x and .y suffixes
parts %>% 
  inner_join(part_categories, by = c("part_cat_id" = "id"), suffix= c("_part","_category"))
# A tibble: 17,501 × 4
   part_num   name_part                             part_cat_id name_category   
   <chr>      <chr>                                       <dbl> <chr>           
 1 0901       Baseplate 16 x 30 with Set 080 Yello…           1 Baseplates      
 2 0902       Baseplate 16 x 24 with Set 080 Small…           1 Baseplates      
 3 0903       Baseplate 16 x 24 with Set 080 Red H…           1 Baseplates      
 4 0904       Baseplate 16 x 24 with Set 080 Large…           1 Baseplates      
 5 1          Homemaker Bookcase 2 x 4 x 4                    7 Containers      
 6 10016414   Sticker Sheet #1 for 41055-1                   58 Stickers        
 7 10026stk01 Sticker for Set 10026 - (44942/41841…          58 Stickers        
 8 10039      Pullback Motor 8 x 4 x 2/3                     44 Mechanical      
 9 10048      Minifig Hair Tousled                           65 Minifig Headwear
10 10049      Minifig Shield Broad with Spiked Bot…          27 Minifig Accesso…
# … with 17,491 more rows
# Combine the parts and inventory_parts tables
parts %>%
  inner_join(inventory_parts, by=c("part_num"))
# A tibble: 258,958 × 6
   part_num name                      part_cat_id inventory_id color_id quantity
   <chr>    <chr>                           <dbl>        <dbl>    <dbl>    <dbl>
 1 0901     Baseplate 16 x 30 with S…           1         1973        2        1
 2 0902     Baseplate 16 x 24 with S…           1         1973        2        1
 3 0903     Baseplate 16 x 24 with S…           1         1973        2        1
 4 0904     Baseplate 16 x 24 with S…           1         1973        2        1
 5 1        Homemaker Bookcase 2 x 4…           7          508       15        1
 6 1        Homemaker Bookcase 2 x 4…           7         1158       15        2
 7 1        Homemaker Bookcase 2 x 4…           7         6590       15        2
 8 1        Homemaker Bookcase 2 x 4…           7         9679       15        2
 9 1        Homemaker Bookcase 2 x 4…           7        12256        1        2
10 1        Homemaker Bookcase 2 x 4…           7        13356       15        1
# … with 258,948 more rows
# Combine the parts and inventory_parts tables
inventory_parts %>%
  inner_join(parts, by=c("part_num"))
# A tibble: 258,958 × 6
   inventory_id part_num             color_id quantity name          part_cat_id
          <dbl> <chr>                   <dbl>    <dbl> <chr>               <dbl>
 1           21 3009                        7       50 Brick 1 x 6            11
 2           25 21019c00pat004pr1033       15        1 Legs and Hip…          61
 3           25 24629pr0002                78        1 Minifig Head…          59
 4           25 24634pr0001                 5        1 Headwear Acc…          27
 5           25 24782pr0001                 5        1 Minifig Hipw…          27
 6           25 88646                       0        1 Tile Special…          15
 7           25 973pr3314c01                5        1 Torso with 1…          60
 8           26 14226c11                    0        3 String with …          31
 9           26 2340px2                    15        1 Tail 4 x 1 x…          35
10           26 2340px3                    15        1 Tail 4 x 1 x…          35
# … with 258,948 more rowssets %>%
  # Add inventories using an inner join 
  inner_join(inventories, by= c("set_num")) %>%
  # Add inventory_parts using an inner join 
  inner_join(inventory_parts, by= c("id"="inventory_id"))
# A tibble: 258,958 × 9
   set_num name           year theme_id    id version part_num color_id quantity
   <chr>   <chr>         <dbl>    <dbl> <dbl>   <dbl> <chr>       <dbl>    <dbl>
 1 700.3-1 Medium Gift …  1949      365 24197       1 bdoor01         2        2
 2 700.3-1 Medium Gift …  1949      365 24197       1 bdoor01        15        1
 3 700.3-1 Medium Gift …  1949      365 24197       1 bdoor01         4        1
 4 700.3-1 Medium Gift …  1949      365 24197       1 bslot02        15        6
 5 700.3-1 Medium Gift …  1949      365 24197       1 bslot02         2        6
 6 700.3-1 Medium Gift …  1949      365 24197       1 bslot02         4        6
 7 700.3-1 Medium Gift …  1949      365 24197       1 bslot02         1        6
 8 700.3-1 Medium Gift …  1949      365 24197       1 bslot02        14        6
 9 700.3-1 Medium Gift …  1949      365 24197       1 bslot02a       15        6
10 700.3-1 Medium Gift …  1949      365 24197       1 bslot02a        2        6
# … with 258,948 more rows
# Count the number of colors and sort
sets %>%
  inner_join(inventories, by = "set_num") %>%
  inner_join(inventory_parts, by = c("id" = "inventory_id")) %>%
  inner_join(colors, by = c("color_id" = "id"), suffix = c("_set", "_color")) %>%
  count(name_color, sort=TRUE)
# A tibble: 134 × 2
   name_color            n
   <chr>             <int>
 1 Black             48068
 2 White             30105
 3 Light Bluish Gray 26024
 4 Red               21602
 5 Dark Bluish Gray  19948
 6 Yellow            17088
 7 Blue              12980
 8 Light Gray         8632
 9 Reddish Brown      6960
10 Tan                6664
# … with 124 more rows
# Combine the star_destroyer and millennium_falcon tables
millennium_falcon %>%
  left_join(star_destroyer, by=c("part_num","color_id"), suffix = c("_falcon","_star_destroyer"))
# A tibble: 263 × 6
   set_num_falcon part_num color_id quantity_falcon set_num_star_destroyer
   <chr>          <chr>       <dbl>           <dbl> <chr>                 
 1 7965-1         63868          71              62 <NA>                  
 2 7965-1         3023            0              60 <NA>                  
 3 7965-1         3021           72              46 75190-1               
 4 7965-1         2780            0              37 75190-1               
 5 7965-1         60478          72              36 <NA>                  
 6 7965-1         6636           71              34 75190-1               
 7 7965-1         3009           71              28 75190-1               
 8 7965-1         3665           71              22 <NA>                  
 9 7965-1         2412b          72              20 75190-1               
10 7965-1         3010           71              19 <NA>                  
# … with 253 more rows, and 1 more variable: quantity_star_destroyer <dbl
# Aggregate Millennium Falcon for the total quantity in each part
millennium_falcon_colors <- millennium_falcon %>%
  group_by(color_id) %>%
  summarize(total_quantity = sum(quantity))

# Aggregate Star Destroyer for the total quantity in each part
star_destroyer_colors <- star_destroyer %>%
  group_by(color_id) %>%
  summarize(total_quantity = sum(quantity))

# Left join the Millennium Falcon colors to the Star Destroyer colors
millennium_falcon_colors %>%
  left_join(star_destroyer_colors, by=c("color_id"), suffix=c("_falcon","_star_destroyer"))
# A tibble: 21 × 3
   color_id total_quantity_falcon total_quantity_star_destroyer
      <dbl>                 <dbl>                         <dbl>
 1        0                   201                           336
 2        1                    15                            23
 3        4                    17                            53
 4       14                     3                             4
 5       15                    15                            17
 6       19                    95                            12
 7       28                     3                            16
 8       33                     5                            NA
 9       36                     1                            14
10       41                     6                            15
# … with 11 more rows
inventory_version_1 <- inventories %>%
  filter(version == 1)

# Join versions to sets
sets %>%
  left_join(inventory_version_1, by=c("set_num")) %>%
  # Filter for where version is na
  filter(is.na(version))
# A tibble: 1 × 6
  set_num name       year theme_id    id version
  <chr>   <chr>     <dbl>    <dbl> <dbl>   <dbl>
1 40198-1 Ludo game  2018      598    NA      NA

parts %>%
  count(part_cat_id) %>%
  right_join(part_categories, by = c("part_cat_id" = "id")) %>%
  # Filter for NA
  filter(is.na(n))
# A tibble: 1 × 3
  part_cat_id     n name   
        <dbl> <int> <chr>  
1          66    NA Modulex
parts %>%
  count(part_cat_id) %>%
  right_join(part_categories, by = c("part_cat_id" = "id")) %>%
  # Use replace_na to replace missing values in the n column
  replace_na(list(n=0))
# A tibble: 64 × 3
   part_cat_id     n name                   
         <dbl> <dbl> <chr>                  
 1           1   135 Baseplates             
 2           3   303 Bricks Sloped          
 3           4  1900 Duplo, Quatro and Primo
 4           5   107 Bricks Special         
 5           6   128 Bricks Wedged          
 6           7    97 Containers             
 7           8    24 Technic Bricks         
 8           9   167 Plates Special         
 9          11   490 Bricks                 
10          12    85 Technic Connectors     
# … with 54 more rows
themes %>% 
# Start with inventory_parts_joined table
inventory_parts_joined %>%
  # Combine with the sets table 
  inner_join(sets, by="set_num") %>%
  # Combine with the themes table 
  inner_join(themes, by = c("theme_id"="id"), suffix=c("_set","_theme"))
  # Inner join the themes table
  inner_join(themes, by=c("id"="parent_id"), suffix=c("_parent","_child"))%>%
  # Filter for the "Harry Potter" parent name 
  filter(name_parent=="Harry Potter")
# A tibble: 6 × 5
     id name_parent  parent_id id_child name_child          
  <dbl> <chr>            <dbl>    <dbl> <chr>               
1   246 Harry Potter        NA      247 Chamber of Secrets  
2   246 Harry Potter        NA      248 Goblet of Fire      
3   246 Harry Potter        NA      249 Order of the Phoenix
4   246 Harry Potter        NA      250 Prisoner of Azkaban 
5   246 Harry Potter        NA      251 Sorcerer's Stone    
6   246 Harry Potter        NA      667 Fantastic Beasts 
# Join themes to itself again to find the grandchild relationships
themes %>% 
  inner_join(themes, by = c("id" = "parent_id"), suffix = c("_parent", "_child")) %>%
  inner_join(themes, by=c("id_child"="parent_id"), suffix=c("_parent", "_grandchild"))
# A tibble: 158 × 7
   id_parent name_parent parent_id id_child name_child id_grandchild name       
       <dbl> <chr>           <dbl>    <dbl> <chr>              <dbl> <chr>      
 1         1 Technic            NA        5 Model                  6 Airport    
 2         1 Technic            NA        5 Model                  7 Constructi…
 3         1 Technic            NA        5 Model                  8 Farm       
 4         1 Technic            NA        5 Model                  9 Fire       
 5         1 Technic            NA        5 Model                 10 Harbor     
 6         1 Technic            NA        5 Model                 11 Off-Road   
 7         1 Technic            NA        5 Model                 12 Race       
 8         1 Technic            NA        5 Model                 13 Riding Cyc…
 9         1 Technic            NA        5 Model                 14 Robot      
10         1 Technic            NA        5 Model                 15 Traffic    
# … with 148 more rows
themes %>% 
  # Left join the themes table to its own children
  left_join(themes, by=c("id"="parent_id"),suffix=c("_parent","_child")) %>%
  # Filter for themes that have no child themes
  filter(is.na(name_child))
# A tibble: 586 × 5
      id name_parent    parent_id id_child name_child
   <dbl> <chr>              <dbl>    <dbl> <chr>     
 1     2 Arctic Technic         1       NA <NA>      
 2     3 Competition            1       NA <NA>      
 3     4 Expert Builder         1       NA <NA>      
 4     6 Airport                5       NA <NA>      
 5     7 Construction           5       NA <NA>      
 6     8 Farm                   5       NA <NA>      
 7     9 Fire                   5       NA <NA>      
 8    10 Harbor                 5       NA <NA>      
 9    11 Off-Road               5       NA <NA>      
10    12 Race                   5       NA <NA>      
# … with 576 more rows
# Start with inventory_parts_joined table
inventory_parts_joined %>%
  # Combine with the sets table 
  inner_join(sets, by="set_num") %>%
  # Combine with the themes table 
  inner_join(themes, by = c("theme_id"="id"), suffix=c("_set","_theme"))
# A tibble: 258,958 × 9
   set_num  part_num color_id quantity name_set         year theme_id name_theme
   <chr>    <chr>       <dbl>    <dbl> <chr>           <dbl>    <dbl> <chr>     
 1 40179-1  3024           72      900 Personalised M…  2016      277 Mosaic    
 2 40179-1  3024           15      900 Personalised M…  2016      277 Mosaic    
 3 40179-1  3024            0      900 Personalised M…  2016      277 Mosaic    
 4 40179-1  3024           71      900 Personalised M…  2016      277 Mosaic    
 5 40179-1  3024           14      900 Personalised M…  2016      277 Mosaic    
 6 k34434-1 3024           15      810 Lego Mosaic Ti…  2003      277 Mosaic    
 7 21010-1  3023          320      771 Robie House      2011      252 Architect…
 8 k34431-1 3024            0      720 Lego Mosaic Cat  2003      277 Mosaic    
 9 42083-1  2780            0      684 Bugatti Chiron   2018        5 Model     
10 k34434-1 3024            0      540 Lego Mosaic Ti…  2003      277 Mosaic    
# … with 258,948 more rows, and 1 more variable: parent_id <dbl>

# Count the part number and color id, weight by quantity
batman %>%
  count(part_num, color_id, wt=quantity)
batman_parts %>%
  # Combine the star_wars_parts table 
  full_join(star_wars_parts, by=c("part_num" , "color_id"), suffix=c("_batman","_star_wars")) %>%
  # Replace NAs with 0s in the n_batman and n_star_wars columns 
  replace_na(list(n_batman=0, n_star_wars=0))
# A tibble: 3,628 × 4
   part_num color_id n_batman n_star_wars
   <chr>       <dbl>    <dbl>       <dbl>
 1 10113           0       11           0
 2 10113         272        1           0
 3 10113         320        1           0
 4 10183          57        1           0
 5 10190           0        2           0
 6 10201           0        1          21
 7 10201           4        3           0
 8 10201          14        1           0
 9 10201          15        6           0
10 10201          71        4           5
# … with 3,618 more rows

star_wars %>%
 count(part_num, color_id, wt=quantity)
# A tibble: 2,413 × 3
   part_num color_id     n
   <chr>       <dbl> <dbl>
 1 10169           4     1
 2 10197           0     2
 3 10197          72     3
 4 10201           0    21
 5 10201          71     5
 6 10247           0     9
 7 10247          71    16
 8 10247          72    12
 9 10884          28     1
10 10928          72     6
# … with 2,403 more rows
parts_joined %>%
  # Sort the number of star wars pieces in descending order 
  arrange(desc(n_star_wars)) %>%
  # Join the colors table to the parts_joined table
  inner_join(colors, by=c("color_id"="id")) %>%
  # Join the parts table to the previous join 
  inner_join(parts, by="part_num", suffix=c("_color","_part"))
  # A tibble: 3,628 × 8
   part_num color_id n_batman n_star_wars name_color rgb   name_part part_cat_id
   <chr>       <dbl>    <dbl>       <dbl> <chr>      <chr> <chr>           <dbl>
 1 2780            0      104         392 Black      #051… Technic …          53
 2 32062           0        1         141 Black      #051… Technic …          46
 3 4274            1       56         118 Blue       #005… Technic …          53
 4 6141           36       11         117 Trans-Red  #C91… Plate Ro…          21
 5 3023           71       10         106 Light Blu… #A0A… Plate 1 …          14
 6 6558            1       30         106 Blue       #005… Technic …          53
 7 43093           1       44          99 Blue       #005… Technic …          53
 8 3022           72       14          95 Dark Blui… #6C6… Plate 2 …          14
 9 2357           19        0          84 Tan        #E4C… Brick 2 …          11
10 6141          179       90          81 Flat Silv… #898… Plate Ro…          21
# … with 3,618 more rows
# Filter the batwing set for parts that are also in the batmobile set
batwing %>%
  semi_join(batmobile, by="part_num")

# Filter the batwing set for parts that aren't in the batmobile set
batwing %>%
 anti_join(batmobile, by="part_num")
# A tibble: 126 × 3
   part_num color_id quantity
   <chr>       <dbl>    <dbl>
 1 3023            0       22
 2 3024            0       22
 3 3623            0       20
 4 2780            0       17
 5 3666            0       16
 6 3710            0       14
 7 6141            4       12
 8 2412b          71       10
 9 6141           72       10
10 6558            1        9
# … with 116 more rows
# Filter the batwing set for parts that aren't in the batmobile set
batwing %>%
 anti_join(batmobile, by="part_num")
# A tibble: 183 × 3
   part_num color_id quantity
   <chr>       <dbl>    <dbl>
 1 11477           0       18
 2 99207          71       18
 3 22385           0       14
 4 99563           0       13
 5 10247          72       12
 6 2877           72       12
 7 61409          72       12
 8 11153           0       10
 9 98138          46       10
10 2419           72        9
# … with 173 more rows
# Use inventory_parts to find colors included in at least one set
colors %>%
  semi_join(inventory_parts, by=c("id"="color_id"))
# A tibble: 134 × 3
      id name           rgb    
   <dbl> <chr>          <chr>  
 1    -1 [Unknown]      #0033B2
 2     0 Black          #05131D
 3     1 Blue           #0055BF
 4     2 Green          #237841
 5     3 Dark Turquoise #008F9B
 6     4 Red            #C91A09
 7     5 Dark Pink      #C870A0
 8     6 Brown          #583927
 9     7 Light Gray     #9BA19D
10     8 Dark Gray      #6D6E5C
# … with 124 more rows
# Use filter() to extract version 1 
version_1_inventories <- inventories %>%
  filter(version==1)

# Use anti_join() to find which set is missing a version 1
sets %>%
  anti_join(version_1_inventories, by="set_num")
# A tibble: 1 × 4
  set_num name       year theme_id
  <chr>   <chr>     <dbl>    <dbl>
1 40198-1 Ludo game  2018      598
batman_colors <- inventory_parts_themes %>%
  # Filter the inventory_parts_themes table for the Batman theme
  filter(name_theme =="Batman") %>%
  group_by(color_id) %>%
  summarize(total = sum(quantity)) %>%
  # Add a fraction column of the total divided by the sum of the total 
  mutate(fraction=total/sum(total))

# Filter and aggregate the Star Wars set data; add a fraction column
star_wars_colors <- inventory_parts_themes %>%
  filter(name_theme =="Star Wars") %>%
  group_by(color_id) %>%
  summarize(total = sum(quantity)) %>%
  mutate(fraction=total/sum(total))
batman_colors %>%
  full_join(star_wars_colors, by = "color_id", suffix = c("_batman", "_star_wars")) %>%
  replace_na(list(total_batman = 0, total_star_wars = 0)) %>%
  inner_join(colors, by = c("color_id" = "id")) %>%
  # Create the difference and total columns
  mutate(difference = (fraction_batman-fraction_star_wars),
         total = (total_batman+total_star_wars) )%>%
  # Filter for totals greater than 200
  filter(total>=200)
# A tibble: 16 × 9
   color_id total_batman fraction_batman total_star_wars fraction_star_wa… name 
      <dbl>        <dbl>           <dbl>           <dbl>             <dbl> <chr>
 1        0         2807         0.296              3258           0.207   Black
 2        1          243         0.0256              410           0.0261  Blue 
 3        4          529         0.0558              434           0.0276  Red  
 4       14          426         0.0449              207           0.0132  Yell…
 5       15          404         0.0426             1771           0.113   White
 6       19          142         0.0150             1012           0.0644  Tan  
 7       28           98         0.0103              183           0.0116  Dark…
 8       36           86         0.00907             246           0.0156  Tran…
 9       46          200         0.0211               39           0.00248 Tran…
10       70          297         0.0313              373           0.0237  Redd…
11       71         1148         0.121              3264           0.208   Ligh…
12       72         1453         0.153              2433           0.155   Dark…
13       84          278         0.0293               31           0.00197 Medi…
14      179          154         0.0162              232           0.0148  Flat…
15      378           22         0.00232             430           0.0273  Sand…
16        7            0        NA                   209           0.0133  Ligh…
# … with 3 more variables: rgb <chr>, difference <dbl>, total <dbl>
# Create a bar plot using colors_joined and the name and difference columns
ggplot(colors_joined, aes(name, difference, fill = name)) +
  geom_col() +
  coord_flip() +
  scale_fill_manual(values = color_palette, guide = "none") +
  labs(y = "Difference: Batman - Star Wars")
