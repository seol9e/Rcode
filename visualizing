# Add a linear trend line without a confidence ribbon
ggplot(taiwan_real_estate, aes(n_convenience, price_twd_msq)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method="lm")
# Using taiwan_real_estate, plot price_twd_msq
ggplot(taiwan_real_estate, aes(price_twd_msq)) +
  # Make it a histogram with 10 bins
  geom_histogram(bins=10) +
  # Facet the plot so each house age group gets its own panel
  facet_wrap(vars(house_age_years))
summary_stats <- taiwan_real_estate %>% 
  # Group by house age
  group_by(house_age_years)%>% 
  # Summarize to calculate the mean house price/area
  summarize(mean_by_group = mean(price_twd_msq))

# See the result
summary_stats
# Update the model formula to remove the intercept
mdl_price_vs_age_no_intercept <- lm(
  price_twd_msq ~ house_age_years+0, 
  data = taiwan_real_estate
)

# See the result
mdl_price_vs_age_no_intercept
# Create a tibble with n_convenience column from zero to ten
explanatory_data <- tibble(
  n_convenience = 0:10
)
prediction_data<-explanatory_data%>%

# Edit this, so predictions are stored in prediction_data
mutate(price_twd_msq<- predict(mdl_price_vs_conv, explanatory_data))

# See the result
prediction_data
# Add to the plot
ggplot(taiwan_real_estate, aes(n_convenience, price_twd_msq)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  # Add a point layer of prediction data, colored yellow
  geom_point(data=prediction_data, color="yellow")
# Get the coefficients of mdl_price_vs_conv
coeffs <- coefficients(mdl_price_vs_conv)

# Get the intercept
intercept <- coeffs[1]

# Get the slope
slope <- coeffs[2]

explanatory_data %>% 
  mutate(
    # Manually calculate the predictions
    price_twd_msq = intercept+slope*n_convenience
  )

# Compare to the results from predict()
predict(mdl_price_vs_conv, explanatory_data)
# Get the model-level elements of the model
glance(mdl_price_vs_conv)
